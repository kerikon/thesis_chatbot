{% extends "get_dates_for_runs.jinja" %}
{% block condition %}
CALL {
{% if cond != 'automation errors' %}
    {% if cond == 'errors' %}
        MATCH (g:Goal)<-[:has_goal]-(r)-[:at_date]->(d:Day)<-[:has_day]-(m:Month)<-[:has_month]-(y:Year)
        WHERE g.status <> "SUCCEEDED"
        RETURN DISTINCT y, m, d, r as runs
        UNION MATCH (e:Experiment)<-[:executed_experiment]-(r)-[:at_date]->(d:Day)<-[:has_day]-(m:Month)<-[:has_month]-(y:Year)
        WHERE e.result <> "FINISHED"
        RETURN DISTINCT y, m, d, r as runs
        UNION
    {% endif %}
    MATCH (r:Run)-[:at_date]->(d:Day)<-[:has_day]-(m:Month)<-[:has_month]-(y:Year)
    CALL apoc.path.subgraphAll(r, {
        relationshipFilter: "at_time>",
        labelFilter: "Command|DockingAction"
    })
    YIELD nodes
    WHERE
    {% if cond == 'docking errors' or cond == 'errors' %}
        any(node IN nodes WHERE node.state = "FAILED" AND node.name = "DOCK")
        OR any(node IN nodes WHERE node.state = "DOCKING_SEQUENCE_FAILED")
    {% endif %}
    {% if cond == 'errors' %}
        OR
    {% endif %}
    {% if cond == 'navigation errors' or cond == 'errors' %}
        any(node IN nodes WHERE node.state = "FAILED" AND node.name = "GO_TO")
    {% endif %}
    UNWIND [node IN nodes WHERE node:Run] as run
    RETURN DISTINCT y, m, d, r as runs
    } WITH y, m, d, runs
{% elif cond == 'localization errors' %}
    MATCH (y:Year)-[:has_month]->(m:Month)-[:has_day]->(d:Day)<-[:at_date]-(run:Run)-[:uses]->(loc:LocalizationLosses)-[:lost_through]->(cov:CovarianceIncrease)
    RETURN DISTINCT y, m, d, r as runs
    } WITH y, m, d, runs
{% else %}
    MATCH (j:JoypadUsage)<-[:start_time]-(r:Run)-[:at_date]->(d:Day)<-[:has_day]-(m:Month)<-[:has_month]-(y:Year)
    RETURN DISTINCT y, m, d, r as runs
    } WITH y, m, d, runs
{% endif %}
{% endblock %}