MATCH (run:Run)
{% if selected_run %}
WHERE run.bagfile_location = "{{ selected_run }}"
{% endif %}
WITH run
OPTIONAL MATCH (run)-[tg:has_goal]->(g:Goal)
WITH run, COLLECT(g) AS goal, COLLECT(tg.time) AS goal_time
OPTIONAL MATCH (run)-[te:executed_experiment]->(e:Experiment)
WITH run, goal, goal_time, COLLECT(e) as exp, COLLECT(te.time) AS exp_time
OPTIONAL MATCH (run)-[:start_time]->(j:JoypadUsage)
WITH run, COUNT(j) AS num_joypad_uses, goal, goal_time, exp, exp_time
OPTIONAL MATCH (run)-[:uses]->(loc:LocalizationLosses)-[:lost_through]->(cov:CovarianceIncrease)
WITH run, num_joypad_uses, goal, goal_time, exp, exp_time, COLLECT(cov) AS cov_inc
CALL apoc.path.subgraphAll(run, {
	relationshipFilter: "at_time>",
    labelFilter: "Command|DrivingAction|DockingAction"
})
YIELD nodes, relationships
RETURN run, nodes AS actions,
	   relationships AS action_times,
       goal, exp, num_joypad_uses, goal_time, exp_time, cov_inc